// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: internal/passivation.proto

package internalpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TimeBasedPassivation defines a strategy where an actor is passivated
// after a specified period of inactivity.
//
// passivate_after:
//
//	The duration after which an idle actor should be stopped.
//	This helps free up system resources by removing actors that haven't
//	received messages for a defined time window.
type TimeBasedPassivation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PassivateAfter *durationpb.Duration   `protobuf:"bytes,1,opt,name=passivate_after,json=passivateAfter,proto3" json:"passivate_after,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TimeBasedPassivation) Reset() {
	*x = TimeBasedPassivation{}
	mi := &file_internal_passivation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeBasedPassivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeBasedPassivation) ProtoMessage() {}

func (x *TimeBasedPassivation) ProtoReflect() protoreflect.Message {
	mi := &file_internal_passivation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeBasedPassivation.ProtoReflect.Descriptor instead.
func (*TimeBasedPassivation) Descriptor() ([]byte, []int) {
	return file_internal_passivation_proto_rawDescGZIP(), []int{0}
}

func (x *TimeBasedPassivation) GetPassivateAfter() *durationpb.Duration {
	if x != nil {
		return x.PassivateAfter
	}
	return nil
}

// MessagesCountBasedPassivation defines a strategy where an actor is passivated
// after processing a certain number of messages, regardless of time.
//
// max_messages:
//
//	The maximum number of messages an actor is allowed to process
//	before it is considered for passivation. This can be useful in cases
//	where actors have expensive memory or lifecycle costs.
type MessagesCountBasedPassivation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxMessages   int64                  `protobuf:"varint,1,opt,name=max_messages,json=maxMessages,proto3" json:"max_messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagesCountBasedPassivation) Reset() {
	*x = MessagesCountBasedPassivation{}
	mi := &file_internal_passivation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagesCountBasedPassivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesCountBasedPassivation) ProtoMessage() {}

func (x *MessagesCountBasedPassivation) ProtoReflect() protoreflect.Message {
	mi := &file_internal_passivation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesCountBasedPassivation.ProtoReflect.Descriptor instead.
func (*MessagesCountBasedPassivation) Descriptor() ([]byte, []int) {
	return file_internal_passivation_proto_rawDescGZIP(), []int{1}
}

func (x *MessagesCountBasedPassivation) GetMaxMessages() int64 {
	if x != nil {
		return x.MaxMessages
	}
	return 0
}

// LongLivedPassivation represents a strategy where the actor is long-lived
// and should never be passivated automatically.
//
// This is suitable for actors that are critical system components or
// serve high-throughput workloads with consistent usage patterns.
type LongLivedPassivation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LongLivedPassivation) Reset() {
	*x = LongLivedPassivation{}
	mi := &file_internal_passivation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LongLivedPassivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LongLivedPassivation) ProtoMessage() {}

func (x *LongLivedPassivation) ProtoReflect() protoreflect.Message {
	mi := &file_internal_passivation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LongLivedPassivation.ProtoReflect.Descriptor instead.
func (*LongLivedPassivation) Descriptor() ([]byte, []int) {
	return file_internal_passivation_proto_rawDescGZIP(), []int{2}
}

// PassivationStrategy encapsulates all supported passivation strategies
// for actors. Exactly one of the strategies should be specified.
//
// strategy:
//   - time_based: Uses time-based idle detection to trigger passivation.
//   - messages_count_based: Uses message count threshold to trigger passivation.
//   - long_lived: Disables automatic passivation entirely.
type PassivationStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Strategy:
	//
	//	*PassivationStrategy_TimeBased
	//	*PassivationStrategy_MessagesCountBased
	//	*PassivationStrategy_LongLived
	Strategy      isPassivationStrategy_Strategy `protobuf_oneof:"strategy"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PassivationStrategy) Reset() {
	*x = PassivationStrategy{}
	mi := &file_internal_passivation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassivationStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassivationStrategy) ProtoMessage() {}

func (x *PassivationStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_internal_passivation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassivationStrategy.ProtoReflect.Descriptor instead.
func (*PassivationStrategy) Descriptor() ([]byte, []int) {
	return file_internal_passivation_proto_rawDescGZIP(), []int{3}
}

func (x *PassivationStrategy) GetStrategy() isPassivationStrategy_Strategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *PassivationStrategy) GetTimeBased() *TimeBasedPassivation {
	if x != nil {
		if x, ok := x.Strategy.(*PassivationStrategy_TimeBased); ok {
			return x.TimeBased
		}
	}
	return nil
}

func (x *PassivationStrategy) GetMessagesCountBased() *MessagesCountBasedPassivation {
	if x != nil {
		if x, ok := x.Strategy.(*PassivationStrategy_MessagesCountBased); ok {
			return x.MessagesCountBased
		}
	}
	return nil
}

func (x *PassivationStrategy) GetLongLived() *LongLivedPassivation {
	if x != nil {
		if x, ok := x.Strategy.(*PassivationStrategy_LongLived); ok {
			return x.LongLived
		}
	}
	return nil
}

type isPassivationStrategy_Strategy interface {
	isPassivationStrategy_Strategy()
}

type PassivationStrategy_TimeBased struct {
	TimeBased *TimeBasedPassivation `protobuf:"bytes,1,opt,name=time_based,json=timeBased,proto3,oneof"`
}

type PassivationStrategy_MessagesCountBased struct {
	MessagesCountBased *MessagesCountBasedPassivation `protobuf:"bytes,2,opt,name=messages_count_based,json=messagesCountBased,proto3,oneof"`
}

type PassivationStrategy_LongLived struct {
	LongLived *LongLivedPassivation `protobuf:"bytes,3,opt,name=long_lived,json=longLived,proto3,oneof"`
}

func (*PassivationStrategy_TimeBased) isPassivationStrategy_Strategy() {}

func (*PassivationStrategy_MessagesCountBased) isPassivationStrategy_Strategy() {}

func (*PassivationStrategy_LongLived) isPassivationStrategy_Strategy() {}

var File_internal_passivation_proto protoreflect.FileDescriptor

const file_internal_passivation_proto_rawDesc = "" +
	"\n" +
	"\x1ainternal/passivation.proto\x12\n" +
	"internalpb\x1a\x1egoogle/protobuf/duration.proto\"Z\n" +
	"\x14TimeBasedPassivation\x12B\n" +
	"\x0fpassivate_after\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x0epassivateAfter\"B\n" +
	"\x1dMessagesCountBasedPassivation\x12!\n" +
	"\fmax_messages\x18\x01 \x01(\x03R\vmaxMessages\"\x16\n" +
	"\x14LongLivedPassivation\"\x86\x02\n" +
	"\x13PassivationStrategy\x12A\n" +
	"\n" +
	"time_based\x18\x01 \x01(\v2 .internalpb.TimeBasedPassivationH\x00R\ttimeBased\x12]\n" +
	"\x14messages_count_based\x18\x02 \x01(\v2).internalpb.MessagesCountBasedPassivationH\x00R\x12messagesCountBased\x12A\n" +
	"\n" +
	"long_lived\x18\x03 \x01(\v2 .internalpb.LongLivedPassivationH\x00R\tlongLivedB\n" +
	"\n" +
	"\bstrategyB\xa9\x01\n" +
	"\x0ecom.internalpbB\x10PassivationProtoH\x02P\x01Z;github.com/tochemey/goakt/v4/internal/internalpb;internalpb\xa2\x02\x03IXX\xaa\x02\n" +
	"Internalpb\xca\x02\n" +
	"Internalpb\xe2\x02\x16Internalpb\\GPBMetadata\xea\x02\n" +
	"Internalpbb\x06proto3"

var (
	file_internal_passivation_proto_rawDescOnce sync.Once
	file_internal_passivation_proto_rawDescData []byte
)

func file_internal_passivation_proto_rawDescGZIP() []byte {
	file_internal_passivation_proto_rawDescOnce.Do(func() {
		file_internal_passivation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_passivation_proto_rawDesc), len(file_internal_passivation_proto_rawDesc)))
	})
	return file_internal_passivation_proto_rawDescData
}

var file_internal_passivation_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_internal_passivation_proto_goTypes = []any{
	(*TimeBasedPassivation)(nil),          // 0: internalpb.TimeBasedPassivation
	(*MessagesCountBasedPassivation)(nil), // 1: internalpb.MessagesCountBasedPassivation
	(*LongLivedPassivation)(nil),          // 2: internalpb.LongLivedPassivation
	(*PassivationStrategy)(nil),           // 3: internalpb.PassivationStrategy
	(*durationpb.Duration)(nil),           // 4: google.protobuf.Duration
}
var file_internal_passivation_proto_depIdxs = []int32{
	4, // 0: internalpb.TimeBasedPassivation.passivate_after:type_name -> google.protobuf.Duration
	0, // 1: internalpb.PassivationStrategy.time_based:type_name -> internalpb.TimeBasedPassivation
	1, // 2: internalpb.PassivationStrategy.messages_count_based:type_name -> internalpb.MessagesCountBasedPassivation
	2, // 3: internalpb.PassivationStrategy.long_lived:type_name -> internalpb.LongLivedPassivation
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_internal_passivation_proto_init() }
func file_internal_passivation_proto_init() {
	if File_internal_passivation_proto != nil {
		return
	}
	file_internal_passivation_proto_msgTypes[3].OneofWrappers = []any{
		(*PassivationStrategy_TimeBased)(nil),
		(*PassivationStrategy_MessagesCountBased)(nil),
		(*PassivationStrategy_LongLived)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_passivation_proto_rawDesc), len(file_internal_passivation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_passivation_proto_goTypes,
		DependencyIndexes: file_internal_passivation_proto_depIdxs,
		MessageInfos:      file_internal_passivation_proto_msgTypes,
	}.Build()
	File_internal_passivation_proto = out.File
	file_internal_passivation_proto_goTypes = nil
	file_internal_passivation_proto_depIdxs = nil
}
