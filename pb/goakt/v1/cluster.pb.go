// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: goakt/v1/cluster.proto

package goaktv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActorMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the kind. This is basically the type of actor
	ActorKind string `protobuf:"bytes,1,opt,name=actor_kind,json=actorKind,proto3" json:"actor_kind,omitempty"`
	// Specifies the actor id
	ActorId string `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	// Specifies the actor interface type
	ActorType []byte `protobuf:"bytes,3,opt,name=actor_type,json=actorType,proto3" json:"actor_type,omitempty"`
}

func (x *ActorMeta) Reset() {
	*x = ActorMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorMeta) ProtoMessage() {}

func (x *ActorMeta) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorMeta.ProtoReflect.Descriptor instead.
func (*ActorMeta) Descriptor() ([]byte, []int) {
	return file_goakt_v1_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *ActorMeta) GetActorKind() string {
	if x != nil {
		return x.ActorKind
	}
	return ""
}

func (x *ActorMeta) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *ActorMeta) GetActorType() []byte {
	if x != nil {
		return x.ActorType
	}
	return nil
}

// NodeState holds the node internal state
// Each Node hosting a single actor system has a state that depicts the actual state of the Actor system.
// Having that state helps replicate it across the cluster. In case a node goes down we can easily replay that state on another
// node to get the system going
type NodeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the map between the node id and the various actor meta on that node
	States map[string]*ActorMeta `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NodeState) Reset() {
	*x = NodeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeState) ProtoMessage() {}

func (x *NodeState) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeState.ProtoReflect.Descriptor instead.
func (*NodeState) Descriptor() ([]byte, []int) {
	return file_goakt_v1_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *NodeState) GetStates() map[string]*ActorMeta {
	if x != nil {
		return x.States
	}
	return nil
}

type PutNodeStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the node key
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Specifies the actor meta
	ActorMeta *ActorMeta `protobuf:"bytes,2,opt,name=actor_meta,json=actorMeta,proto3" json:"actor_meta,omitempty"`
}

func (x *PutNodeStateRequest) Reset() {
	*x = PutNodeStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutNodeStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutNodeStateRequest) ProtoMessage() {}

func (x *PutNodeStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutNodeStateRequest.ProtoReflect.Descriptor instead.
func (*PutNodeStateRequest) Descriptor() ([]byte, []int) {
	return file_goakt_v1_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *PutNodeStateRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *PutNodeStateRequest) GetActorMeta() *ActorMeta {
	if x != nil {
		return x.ActorMeta
	}
	return nil
}

type PutNodeStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the NodeState
	State *NodeState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *PutNodeStateResponse) Reset() {
	*x = PutNodeStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutNodeStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutNodeStateResponse) ProtoMessage() {}

func (x *PutNodeStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutNodeStateResponse.ProtoReflect.Descriptor instead.
func (*PutNodeStateResponse) Descriptor() ([]byte, []int) {
	return file_goakt_v1_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *PutNodeStateResponse) GetState() *NodeState {
	if x != nil {
		return x.State
	}
	return nil
}

type GetNodeStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the node key
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *GetNodeStateRequest) Reset() {
	*x = GetNodeStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_cluster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStateRequest) ProtoMessage() {}

func (x *GetNodeStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_cluster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStateRequest.ProtoReflect.Descriptor instead.
func (*GetNodeStateRequest) Descriptor() ([]byte, []int) {
	return file_goakt_v1_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *GetNodeStateRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetNodeStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the NodeState
	State *NodeState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *GetNodeStateResponse) Reset() {
	*x = GetNodeStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_cluster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStateResponse) ProtoMessage() {}

func (x *GetNodeStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_cluster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStateResponse.ProtoReflect.Descriptor instead.
func (*GetNodeStateResponse) Descriptor() ([]byte, []int) {
	return file_goakt_v1_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *GetNodeStateResponse) GetState() *NodeState {
	if x != nil {
		return x.State
	}
	return nil
}

var File_goakt_v1_cluster_proto protoreflect.FileDescriptor

var file_goakt_v1_cluster_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2e,
	0x76, 0x31, 0x22, 0x64, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x09, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x1a,
	0x4e, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x62, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x61,
	0x6b, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x32, 0xbb, 0x01, 0x0a, 0x1b, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x50, 0x75, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6b,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x6f, 0x61, 0x6b, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6b, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x8f, 0x01, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6f, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x79, 0x2f,
	0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2f,
	0x76, 0x31, 0x3b, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x47, 0x58, 0x58,
	0xaa, 0x02, 0x08, 0x47, 0x6f, 0x61, 0x6b, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x08, 0x47, 0x6f,
	0x61, 0x6b, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14, 0x47, 0x6f, 0x61, 0x6b, 0x74, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09,
	0x47, 0x6f, 0x61, 0x6b, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_goakt_v1_cluster_proto_rawDescOnce sync.Once
	file_goakt_v1_cluster_proto_rawDescData = file_goakt_v1_cluster_proto_rawDesc
)

func file_goakt_v1_cluster_proto_rawDescGZIP() []byte {
	file_goakt_v1_cluster_proto_rawDescOnce.Do(func() {
		file_goakt_v1_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_goakt_v1_cluster_proto_rawDescData)
	})
	return file_goakt_v1_cluster_proto_rawDescData
}

var file_goakt_v1_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_goakt_v1_cluster_proto_goTypes = []interface{}{
	(*ActorMeta)(nil),            // 0: goakt.v1.ActorMeta
	(*NodeState)(nil),            // 1: goakt.v1.NodeState
	(*PutNodeStateRequest)(nil),  // 2: goakt.v1.PutNodeStateRequest
	(*PutNodeStateResponse)(nil), // 3: goakt.v1.PutNodeStateResponse
	(*GetNodeStateRequest)(nil),  // 4: goakt.v1.GetNodeStateRequest
	(*GetNodeStateResponse)(nil), // 5: goakt.v1.GetNodeStateResponse
	nil,                          // 6: goakt.v1.NodeState.StatesEntry
}
var file_goakt_v1_cluster_proto_depIdxs = []int32{
	6, // 0: goakt.v1.NodeState.states:type_name -> goakt.v1.NodeState.StatesEntry
	0, // 1: goakt.v1.PutNodeStateRequest.actor_meta:type_name -> goakt.v1.ActorMeta
	1, // 2: goakt.v1.PutNodeStateResponse.state:type_name -> goakt.v1.NodeState
	1, // 3: goakt.v1.GetNodeStateResponse.state:type_name -> goakt.v1.NodeState
	0, // 4: goakt.v1.NodeState.StatesEntry.value:type_name -> goakt.v1.ActorMeta
	2, // 5: goakt.v1.NodeStateReplicationService.PutNodeState:input_type -> goakt.v1.PutNodeStateRequest
	4, // 6: goakt.v1.NodeStateReplicationService.GetNodeState:input_type -> goakt.v1.GetNodeStateRequest
	3, // 7: goakt.v1.NodeStateReplicationService.PutNodeState:output_type -> goakt.v1.PutNodeStateResponse
	5, // 8: goakt.v1.NodeStateReplicationService.GetNodeState:output_type -> goakt.v1.GetNodeStateResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_goakt_v1_cluster_proto_init() }
func file_goakt_v1_cluster_proto_init() {
	if File_goakt_v1_cluster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goakt_v1_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goakt_v1_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goakt_v1_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutNodeStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goakt_v1_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutNodeStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goakt_v1_cluster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goakt_v1_cluster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goakt_v1_cluster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goakt_v1_cluster_proto_goTypes,
		DependencyIndexes: file_goakt_v1_cluster_proto_depIdxs,
		MessageInfos:      file_goakt_v1_cluster_proto_msgTypes,
	}.Build()
	File_goakt_v1_cluster_proto = out.File
	file_goakt_v1_cluster_proto_rawDesc = nil
	file_goakt_v1_cluster_proto_goTypes = nil
	file_goakt_v1_cluster_proto_depIdxs = nil
}
