// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: goakt/v1/projection.proto

package goaktv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Offset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the persistence unique identifier
	PersistenceId string `protobuf:"bytes,1,opt,name=persistence_id,json=persistenceId,proto3" json:"persistence_id,omitempty"`
	// Specifies the projection name.
	ProjectionName string `protobuf:"bytes,2,opt,name=projection_name,json=projectionName,proto3" json:"projection_name,omitempty"`
	// Specifies the current_offset
	// The current offset should match the sequence number of the given event consumed by the
	// projection
	CurrentOffset uint64 `protobuf:"varint,3,opt,name=current_offset,json=currentOffset,proto3" json:"current_offset,omitempty"`
	// Specifies the timestamp
	Timestamp int64 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Offset) Reset() {
	*x = Offset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_projection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offset) ProtoMessage() {}

func (x *Offset) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_projection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offset.ProtoReflect.Descriptor instead.
func (*Offset) Descriptor() ([]byte, []int) {
	return file_goakt_v1_projection_proto_rawDescGZIP(), []int{0}
}

func (x *Offset) GetPersistenceId() string {
	if x != nil {
		return x.PersistenceId
	}
	return ""
}

func (x *Offset) GetProjectionName() string {
	if x != nil {
		return x.ProjectionName
	}
	return ""
}

func (x *Offset) GetCurrentOffset() uint64 {
	if x != nil {
		return x.CurrentOffset
	}
	return 0
}

func (x *Offset) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ProjectionID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the projection name
	// The projection name can be shared for each instance of a Projection
	ProjectionName string `protobuf:"bytes,1,opt,name=projection_name,json=projectionName,proto3" json:"projection_name,omitempty"`
	// Specifies the persistence id
	// The projection id should be unique per instance of a Projection
	PersistenceId string `protobuf:"bytes,2,opt,name=persistence_id,json=persistenceId,proto3" json:"persistence_id,omitempty"`
}

func (x *ProjectionID) Reset() {
	*x = ProjectionID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_projection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectionID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectionID) ProtoMessage() {}

func (x *ProjectionID) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_projection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectionID.ProtoReflect.Descriptor instead.
func (*ProjectionID) Descriptor() ([]byte, []int) {
	return file_goakt_v1_projection_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectionID) GetProjectionName() string {
	if x != nil {
		return x.ProjectionName
	}
	return ""
}

func (x *ProjectionID) GetPersistenceId() string {
	if x != nil {
		return x.PersistenceId
	}
	return ""
}

type GetLatestOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the projection Id
	ProjectionId *ProjectionID `protobuf:"bytes,1,opt,name=projection_id,json=projectionId,proto3" json:"projection_id,omitempty"`
}

func (x *GetLatestOffset) Reset() {
	*x = GetLatestOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_projection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestOffset) ProtoMessage() {}

func (x *GetLatestOffset) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_projection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestOffset.ProtoReflect.Descriptor instead.
func (*GetLatestOffset) Descriptor() ([]byte, []int) {
	return file_goakt_v1_projection_proto_rawDescGZIP(), []int{2}
}

func (x *GetLatestOffset) GetProjectionId() *ProjectionID {
	if x != nil {
		return x.ProjectionId
	}
	return nil
}

type GetCurrentOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the projection Id
	ProjectionId *ProjectionID `protobuf:"bytes,1,opt,name=projection_id,json=projectionId,proto3" json:"projection_id,omitempty"`
}

func (x *GetCurrentOffset) Reset() {
	*x = GetCurrentOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_projection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentOffset) ProtoMessage() {}

func (x *GetCurrentOffset) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_projection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentOffset.ProtoReflect.Descriptor instead.
func (*GetCurrentOffset) Descriptor() ([]byte, []int) {
	return file_goakt_v1_projection_proto_rawDescGZIP(), []int{3}
}

func (x *GetCurrentOffset) GetProjectionId() *ProjectionID {
	if x != nil {
		return x.ProjectionId
	}
	return nil
}

type StartProjection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartProjection) Reset() {
	*x = StartProjection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goakt_v1_projection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartProjection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartProjection) ProtoMessage() {}

func (x *StartProjection) ProtoReflect() protoreflect.Message {
	mi := &file_goakt_v1_projection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartProjection.ProtoReflect.Descriptor instead.
func (*StartProjection) Descriptor() ([]byte, []int) {
	return file_goakt_v1_projection_proto_rawDescGZIP(), []int{4}
}

var File_goakt_v1_projection_proto protoreflect.FileDescriptor

var file_goakt_v1_projection_proto_rawDesc = []byte{
	0x0a, 0x19, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x6f, 0x61,
	0x6b, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9d, 0x01, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x5e, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61,
	0x6b, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x61, 0x6b, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x92, 0x01, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x61,
	0x6b, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6f, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x79, 0x2f,
	0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x2f,
	0x76, 0x31, 0x3b, 0x67, 0x6f, 0x61, 0x6b, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x47, 0x58, 0x58,
	0xaa, 0x02, 0x08, 0x47, 0x6f, 0x61, 0x6b, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x08, 0x47, 0x6f,
	0x61, 0x6b, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14, 0x47, 0x6f, 0x61, 0x6b, 0x74, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09,
	0x47, 0x6f, 0x61, 0x6b, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_goakt_v1_projection_proto_rawDescOnce sync.Once
	file_goakt_v1_projection_proto_rawDescData = file_goakt_v1_projection_proto_rawDesc
)

func file_goakt_v1_projection_proto_rawDescGZIP() []byte {
	file_goakt_v1_projection_proto_rawDescOnce.Do(func() {
		file_goakt_v1_projection_proto_rawDescData = protoimpl.X.CompressGZIP(file_goakt_v1_projection_proto_rawDescData)
	})
	return file_goakt_v1_projection_proto_rawDescData
}

var file_goakt_v1_projection_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_goakt_v1_projection_proto_goTypes = []interface{}{
	(*Offset)(nil),           // 0: goakt.v1.Offset
	(*ProjectionID)(nil),     // 1: goakt.v1.ProjectionID
	(*GetLatestOffset)(nil),  // 2: goakt.v1.GetLatestOffset
	(*GetCurrentOffset)(nil), // 3: goakt.v1.GetCurrentOffset
	(*StartProjection)(nil),  // 4: goakt.v1.StartProjection
}
var file_goakt_v1_projection_proto_depIdxs = []int32{
	1, // 0: goakt.v1.GetLatestOffset.projection_id:type_name -> goakt.v1.ProjectionID
	1, // 1: goakt.v1.GetCurrentOffset.projection_id:type_name -> goakt.v1.ProjectionID
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_goakt_v1_projection_proto_init() }
func file_goakt_v1_projection_proto_init() {
	if File_goakt_v1_projection_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goakt_v1_projection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goakt_v1_projection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectionID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goakt_v1_projection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goakt_v1_projection_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goakt_v1_projection_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartProjection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goakt_v1_projection_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_goakt_v1_projection_proto_goTypes,
		DependencyIndexes: file_goakt_v1_projection_proto_depIdxs,
		MessageInfos:      file_goakt_v1_projection_proto_msgTypes,
	}.Build()
	File_goakt_v1_projection_proto = out.File
	file_goakt_v1_projection_proto_rawDesc = nil
	file_goakt_v1_projection_proto_goTypes = nil
	file_goakt_v1_projection_proto_depIdxs = nil
}
