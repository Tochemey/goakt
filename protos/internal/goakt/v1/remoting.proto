syntax = "proto3";

package goakt.v1;

import "google/protobuf/any.proto";

service RemotingService {
  // Sends a message to an actor remotely with a reply expected from the receiving actor
  // With this type of message the receiver cannot communicate back to Sender
  // except reply the message with a response. This one-way communication
  rpc RemoteSendSync(RemoteSendSyncRequest) returns (RemoteSendSyncResponse);
  // Sends a message to an actor remotely without expecting any reply
  rpc RemoteSendAsync(RemoteSendAsyncRequest) returns (RemoteSendAsyncResponse);
  // Lookup for an actor on a remote host.
  rpc RemoteLookup(RemoteLookupRequest) returns (RemoteLookupResponse);
}

// RemoteSendSync is used to send a message to an actor remotely and expect a response
// immediately. With this type of message the receiver cannot communicate back to Sender
// except reply the message with a response. This one-way communication
message RemoteSendSyncRequest {
  // Specifies the receiver' address
  Address receiver = 1;
  // Specifies the message to send to the actor
  // Any proto message is allowed to be sent
  google.protobuf.Any message = 2;
}

message RemoteSendSyncResponse {
  // Specifies the message to send to the actor
  // Any proto message is allowed to be sent
  google.protobuf.Any message = 1;
}

// RemoteSendSync is used to send a message to an actor remotely without expecting any reply
message RemoteSendAsyncRequest {
  RemoteMessage remote_message = 1;
}

message RemoteSendAsyncResponse {}

// Address represents an actor address
message Address {
  // Specifies the remote host address
  string host = 1;
  // Specifies the remote port
  int32 port = 2;
  // Specifies the actor name
  string name = 3;
  // Specifies the actor unique id on the remote host
  string id = 4;
}

// RemoteLookupRequest checks whether a given actor exists on a remote host
message RemoteLookupRequest {
  // Specifies the remote host address
  string host = 1;
  // Specifies the remote port
  int32 port = 2;
  // Specifies the actor name
  string name = 3;
}

message RemoteLookupResponse {
  // Specifies the actor address
  Address address = 1;
}

// RemoteMessage will be used by Actors to communicate remotely
message RemoteMessage {
  // Specifies the sender' address
  Address sender = 1;
  // Specifies the actor address
  Address receiver = 2;
  // Specifies the message to send to the actor
  // Any proto message is allowed to be sent
  google.protobuf.Any message = 3;
}
