syntax = "proto3";

package goakt.v1;

option go_package = "github.com/tochemey/goakt/internal/goakt/v1;goaktv1";

enum DiscoveryProvider {
  // Specifies that there is no discovery provider
  DISCOVERY_PROVIDER_UNSPECIFIED = 0;
  // Specifies that the discovery provider is local
  DISCOVERY_PROVIDER_LOCAL = 1;
  // Specifies that the discovery provider is kubernetes
  DISCOVERY_PROVIDER_K8 = 2;
  // Specifies that the discovery provider is mDNS
  DISCOVERY_PROVIDER_MDNS = 3;
}

// Node stores all the information about a Node
message Node {
  // Specifies the node unique identifier
  // It is uuid v4 that is auto-generated
  string uuid = 1;
  // Specifies the node name
  string name = 2;
  // Specifies the node host name
  string host = 3;
  // Specifies the node port
  int32 port = 4;
  // Specifies the timestamp the node has been registered
  // The timestamp is expressed in UNIX time
  int64 timestamp = 5;
  // Specifies additional meta info about the node
  // This is optional but can be useful when one want to pass a node information to other nodes
  map<string, string> meta = 6;
}

// NodeAdded is event that a given node is added
message NodeAdded {
  // Specifies the node
  Node node = 1;
}

// NodeRemoved event is emitted when a node is automatically removed from the discovery engine.
message NodeRemoved {
  // Specifies the node
  Node node = 1;
}

// NodeModified event is emitted when a node is modified
message NodeModified {
  // Specifies the old node
  Node old_node = 1;
  // Specifies the node
  Node new_node = 2;
}

// Event specifies the various types of events
// emitted by the discovery engine
message Event {
  // Specifies the type of event
  oneof type {
    // Specifies the node added event type
    NodeAdded added = 1;
    // Specifies the node removed event type
    NodeRemoved removed = 3;
    // Specifies the node modified event type
    NodeModified modified = 4;
  }
}
