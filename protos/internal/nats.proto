/*
 * MIT License
 *
 * Copyright (c) 2022-2024 Tochemey
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

syntax = "proto3";

package internalpb;

option go_package = "github.com/tochemey/goakt/v2/internal/internalpb;internalpb";

// NatsMessageType defines the NATs message type
enum NatsMessageType {
  NATS_MESSAGE_TYPE_REGISTER = 0;
  NATS_MESSAGE_TYPE_DEREGISTER = 1;
  NATS_MESSAGE_TYPE_REQUEST = 2;
  NATS_MESSAGE_TYPE_RESPONSE = 3;
}

// NatsMessage defines the NATs message
// used by the discovery provider
message NatsMessage {
  // Specifies the host name of the client node
  string host = 1;
  // Specifies the port of the client node
  int32 port = 2;
  // Specifies the client name
  string name = 3;
  // Specifies the message type
  NatsMessageType message_type = 4;
}
