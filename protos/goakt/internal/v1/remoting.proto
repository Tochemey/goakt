syntax = "proto3";

package internal.v1;

import "address/v1/address.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/tochemey/goakt/internal/v1;internalpb";

// RemotingService defines the remoting service
// With remoting one can:
// - send messages to actors
// - lookup actor remotely
service RemotingService {
  // RemoteAsk is used to send a message to an actor remotely and expect a response immediately.
  rpc RemoteAsk(RemoteAskRequest) returns (RemoteAskResponse);
  // RemoteTell is used to send a message to a remote actor
  // The actor on the other line can reply to the sender by using the Sender in the message
  rpc RemoteTell(RemoteTellRequest) returns (RemoteTellResponse);
  // Lookup for an actor on a remote host.
  rpc RemoteLookup(RemoteLookupRequest) returns (RemoteLookupResponse);
  // RemoteBatchTell is used to send a bulk of messages to a remote actor
  rpc RemoteBatchTell(RemoteBatchTellRequest) returns (RemoteBatchTellResponse);
  // RemoteBatchAsk is used to send a bulk messages to a remote actor with replies.
  // The replies are sent in the same order as the messages
  rpc RemoteBatchAsk(RemoteBatchAskRequest) returns (RemoteBatchAskResponse);
}

// RemoteAsk is used to send a message to an actor remotely and expect a response
// immediately.
message RemoteAskRequest {
  // Specifies the remote message to send
  RemoteMessage remote_message = 1;
}

message RemoteAskResponse {
  // Specifies the message to send to the actor
  // Any proto message is allowed to be sent
  google.protobuf.Any message = 1;
}

// RemoteTell is used to send a message to an actor remotely
message RemoteTellRequest {
  // Specifies the remote message to send
  RemoteMessage remote_message = 1;
}

message RemoteTellResponse {}

// RemoteLookupRequest checks whether a given actor exists on a remote host
message RemoteLookupRequest {
  // Specifies the remote host address
  string host = 1;
  // Specifies the remote port
  int32 port = 2;
  // Specifies the actor name
  string name = 3;
}

message RemoteLookupResponse {
  // Specifies the actor address
  address.v1.Address address = 1;
}

// RemoteMessage will be used by Actors to communicate remotely
message RemoteMessage {
  // Specifies the sender' address
  address.v1.Address sender = 1;
  // Specifies the actor address
  address.v1.Address receiver = 2;
  // Specifies the message to send to the actor
  // Any proto message is allowed to be sent
  google.protobuf.Any message = 3;
}

message RemoteBatchTellRequest {
  // Specifies the remote message to send
  repeated google.protobuf.Any messages = 1;
  // Specifies the sender' address
  address.v1.Address sender = 2;
  // Specifies the actor address
  address.v1.Address receiver = 3;
}

message RemoteBatchTellResponse {}

message RemoteBatchAskRequest {
  // Specifies the remote message to send
  repeated google.protobuf.Any messages = 1;
  // Specifies the sender' address
  address.v1.Address sender = 2;
  // Specifies the actor address
  address.v1.Address receiver = 3;
}

message RemoteBatchAskResponse {
  // Specifies the message to send to the actor
  // Any proto message is allowed to be sent
  repeated google.protobuf.Any messages = 1;
}
