name: build

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - '**/bench/**'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.0'
          check-latest: true
          cache-dependency-path: "**/*.sum"
      - run: go version
      - name: Login to GitHub Docker
        env:
          DOCKER_REGISTRY: ghcr.io
          DOCKER_USER: ${{ github.actor }}
          DOCKER_PASS: ${{ secrets.GITHUB_TOKEN }}
        run: docker login $DOCKER_REGISTRY --username "$DOCKER_USER" --password "$DOCKER_PASS"
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN}}
      - name: Install dependencies
        run: |
          go install github.com/ory/go-acc@latest
      - name: Run tests
        run: |
          go-acc ./... -o coverage.out --ignore goaktpb,mocks,internal/internalpb -- -mod=vendor -race -v
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          fail_ci_if_error: false
          verbose: true
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.0'
          check-latest: true
          cache-dependency-path: "**/*.sum"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.59.1
          args: --timeout 10m --config .golangci.yaml
