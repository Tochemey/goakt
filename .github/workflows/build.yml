name: build

on:
  push:
    branches: [main]
    paths-ignore:
      - "**/README.md"
      - "**/bench/**"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Tests on ${{ matrix.os }}
    runs-on:
      "${{ matrix.os == 'linux' && 'ubuntu-latest' || 'windows-latest' }}"
    strategy:
      fail-fast: true
      matrix:
        os: [linux, windows]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"
          check-latest: true
          cache-dependency-path: "**/*.sum"
      - run: go version
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Vendoring and Tidy
        run: go mod tidy && go mod vendor
      - name: Install dependencies
        run: |
          go mod download
      - name: Install Ory go-acc dependency
        run: |
          go install github.com/ory/go-acc@latest
      - name: Run tests
        run: |
          go-acc ./... -o coverage.out --ignore goaktpb,mocks,internal/internalpb,bench -- -mod=vendor -p 1 -timeout 0 -race -v
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          fail_ci_if_error: false
          verbose: true
  lint:
    name: Linter on ${{ matrix.os }}
    runs-on:
      "${{ matrix.os == 'linux' && 'ubuntu-latest' || 'windows-latest' }}"

    strategy:
      fail-fast: false
      matrix:
        os: [linux, windows]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"
          check-latest: true
          cache-dependency-path: "**/*.sum"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.0
          args: --timeout 10m --config .golangci.yml
