name: pr

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "**/README.md"
      - "**/renovate.json5"
      - "**/scorecard.yml"
      - "**/stale.yml"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            runner: ubuntu-latest

    env:
      TZ: UTC
      CGO_ENABLED: "1"
      GOTOOLCHAIN: local        # avoid auto-upgrading the toolchain
      # Stabilise tests that rely on randomness/time
      GOFLAGS: -mod=readonly

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: false
          fetch-depth: 0
      - uses: actions/setup-go@v6
        with:
          go-version: "1.25.1"
          check-latest: false
          cache-dependency-path: "**/*.sum"
      - run: go version
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Vendoring and Tidy
        run: go mod tidy && go mod vendor
      - name: Install dependencies
        run: |
          go mod download
      - name: Run Linter
        if: matrix.os == 'linux'
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4.0
          args: --timeout 10m --config .golangci.yml
      - name: Install go-acc
        run: |
          go install github.com/ory/go-acc@latest
      - name: Run tests
        shell: bash
        run: |
          go-acc ./... -o coverage.out --ignore goaktpb,mocks,internal/internalpb,bench -- -mod=vendor -p 1 -timeout 0 -race -v
      - name: Upload coverage to Codecov
        if: matrix.os == 'linux'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          fail_ci_if_error: false
          verbose: true
          slug: Tochemey/goakt
