kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: accounts
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: accounts
subjects:
  # Uses the default service account. Consider creating a new one.
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: ClusterRole
  name: accounts
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounts
  labels:
    app.kubernetes.io/name: accounts
    app.kubernetes.io/component: accounts
    app.kubernetes.io/part-of: AccountsSystem
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: accounts
      app.kubernetes.io/component: accounts
      app.kubernetes.io/part-of: AccountsSystem
  template:
    metadata:
      labels:
        app.kubernetes.io/name: accounts
        app.kubernetes.io/component: accounts
        app.kubernetes.io/part-of: AccountsSystem
    spec:
      containers:
        - name: accounts
          image: "accounts:dev"
          command: [ "./accounts", "run" ]
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 50051
              name: grpc
            - containerPort: 9000
              name: remoting
              protocol: TCP
            - containerPort: 3322
              name: gossip-port
              protocol: TCP
            - containerPort: 3320
              name: cluster-port
              protocol: TCP
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GOSSIP_PORT
              value: "3322"
            - name: CLUSTER_PORT
              value: "3320"
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
---
 apiVersion: v1
 kind: Service
 metadata:
   name: accounts
   labels:
     app.kubernetes.io/name: accounts
     app.kubernetes.io/component: accounts
     app.kubernetes.io/part-of: AccountsSystem
 spec:
   selector:
     app.kubernetes.io/name: accounts
     app.kubernetes.io/component: accounts
     app.kubernetes.io/part-of: AccountsSystem
   clusterIP: None
   ports:
     - protocol: TCP
       port: 9000
       targetPort: remoting
       name: remoting
     - protocol: TCP
       port: 50051
       targetPort: grpc
       name: grpc
     - port: 3320
       protocol: TCP
       name: cluster-port
       targetPort: cluster-port
     - port: 3322
       protocol: TCP
       name: gossip-port
       targetPort: gossip-port
